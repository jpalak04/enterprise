image: node:16

cache:
  paths:
    - node_modules/

variables:
  ART_URL: "https://artifactory-phx.ecd.axway.int/artifactory"
  HELM_REPO_BRANCHES: "cesharedservices-helm-snapshot"
  HELM_REPO_RELEASES: "cesharedservices-helm-release"
  DOCKER_REGISTRY_BRANCHES: "cesharedservices-docker-snapshot-phx.artifactory-phx.ecd.axway.int"
  DOCKER_REGISTRY_RELEASES: "cesharedservices-docker-release-phx.artifactory-phx.ecd.axway.int"
  DIND_TAG: "24.0.5-dind" 
  LATEST_TAG_CMD: "git describe --tags --abbrev=0 2> /dev/null || echo \"0.0.1\""



stages:
  - install
  - compile
  - build
  - push
  - charts

default:
  tags:
    - devops-portal



install:
  stage: install
  script:
    - yarn install --frozen-lockfile
  except:
    - main

typescript_compile:
  stage: compile
  script:
    - yarn tsc
  artifacts:
    paths:
      - dist-types/

backend_build:
  stage: build
  script:
    - yarn build:backend --config ../../app-config.yaml --config ../../app-config.docker.yaml
  artifacts:
    paths:
      - packages/backend/dist/


docker_build-push:
  stage: push
  image: docker:latest
  services:
    - name: docker:dind
      command:
        - /bin/sh
        - -c
        - dockerd-entrypoint.sh --insecure-registry=$DOCKER_REGISTRY_BRANCHES --insecure-registry=$DOCKER_REGISTRY_RELEASES || exit
    
  script:
    - docker build -t $DOCKER_REGISTRY_BRANCHES/$CI_PROJECT_NAME:$LATEST_TAG-$CI_COMMIT_REF_NAME .
    - echo "$ART_PWD" | docker login -u "$ART_USER" --password-stdin $DOCKER_REGISTRY_BRANCHES
    - echo "pushing $DOCKER_REGISTRY_BRANCHES/$CI_PROJECT_NAME:$LATEST_TAG-$CI_COMMIT_REF_NAME"
    - docker push $DOCKER_REGISTRY_BRANCHES/$CI_PROJECT_NAME:$LATEST_TAG-$CI_COMMIT_REF_NAME
  before_script:
    - apk add --no-cache git
    - export LATEST_TAG=$(eval ${LATEST_TAG_CMD})
  except:
    - tags
    - main
    - schedules


docker_build-push-release:
  stage: push
  image: docker:latest
  services:
    - name: docker:dind
      command:
        - /bin/sh
        - -c
        - dockerd-entrypoint.sh --insecure-registry=$DOCKER_REGISTRY_BRANCHES --insecure-registry=$DOCKER_REGISTRY_RELEASES || exit
  script:
    - docker build -t $DOCKER_REGISTRY_RELEASES/$CI_PROJECT_NAME:$CI_COMMIT_TAG .
    - echo "$ART_PWD" | docker login -u "$ART_USER" --password-stdin $DOCKER_REGISTRY_RELEASES
    - echo "pushing $DOCKER_REGISTRY_RELEASES/$CI_PROJECT_NAME:$CI_COMMIT_TAG"
    - docker push $DOCKER_REGISTRY_RELEASES/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  only:
    - tags
  except:
    - schedules


package_and_push:
  stage: charts
  image: docker:latest
  script:
    - CHART_VERSION=$(grep 'version:' ./charts/developer-portal/Chart.yaml | awk '{print $2}')-$CI_COMMIT_REF_NAME
    - helm package ./charts/developer-portal --version $CHART_VERSION
    - ls -ltr
    - export JFROG_CLI_SKIP_TLS_VERIFY=true
    - ./jfrog rt upload ce-developer-portal-$CHART_VERSION.tgz $HELM_REPO_BRANCHES
  except:
    - tags
    - main
    - schedules

  before_script:
    # Install JFrog CLI
    - apk add --update --no-cache curl bash openssl ca-certificates
    - curl -fL https://getcli.jfrog.io | sh
  
    # Install Helm CLI
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    - echo -n | openssl s_client -connect artifactory-phx.ecd.axway.int:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /usr/local/share/ca-certificates/artifactory.crt
    - update-ca-certificates
  
    # Configure JFrog CLI
    - ./jfrog config add --artifactory-url=$ART_URL --user=$ART_USER --password=$ART_PWD --interactive=false

package_and_push-release:
  stage: charts
  image: docker:latest
  script:
    - CHART_VERSION=$(grep 'version:' ./charts/developer-portal/Chart.yaml | awk '{print $2}')-$CI_COMMIT_TAG
    - helm package ./charts/developer-portal --version $CHART_VERSION
    - ls -ltr
    - export JFROG_CLI_SKIP_TLS_VERIFY=true
    - ./jfrog rt upload ce-developer-portal-$CHART_VERSION.tgz $HELM_REPO_RELEASES
  only:
    - tags
  except:
    - schedules

  before_script:
    # Install JFrog CLI
    - apk add --update --no-cache curl bash openssl ca-certificates
    - curl -fL https://getcli.jfrog.io | sh
  
    # Install Helm CLI
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    - echo -n | openssl s_client -connect artifactory-phx.ecd.axway.int:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /usr/local/share/ca-certificates/artifactory.crt
    - update-ca-certificates
  
    # Configure JFrog CLI
    - ./jfrog config add --artifactory-url=$ART_URL --user=$ART_USER --password=$ART_PWD --interactive=false

